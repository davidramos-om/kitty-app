{"version":3,"file":"static/js/244.459ec953.chunk.js","mappings":"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","sources":["components/Page.tsx","pages/market/graphql.ts","components/Label.tsx","pages/market/CirculatingSupply.tsx","pages/market/ChartSparkLine.tsx","components/chart/BaseOptionChart.tsx","utils/sort.ts","pages/market/TablePresentation.tsx","pages/market/index.tsx","utils/formatNumber.ts"],"sourcesContent":["import { forwardRef, ReactNode } from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { Box, BoxProps } from '@mui/material';\n\ninterface Props extends BoxProps {\n  children: ReactNode;\n  meta?: ReactNode;\n  title: string;\n}\n\nconst Page = forwardRef<HTMLDivElement, Props>(({ children, title = '', meta, ...other }, ref) => (\n  <>\n    <Helmet>\n      <title>{`${title} | Kitty App v.23.02.08.0250`}</title>\n      {meta}\n    </Helmet>\n\n    <Box\n      ref={ref}\n      paddingLeft={6}\n      paddingRight={6}\n      {...other}\n    >\n      {children}\n    </Box>\n  </>\n));\n\nexport default Page;\n","\nimport { gql, useQuery } from '@apollo/client';\n\n\ntype ARGS = {\n    page?: number;\n    take?: number;\n    search?: string;\n    sort?: string;\n    sort_dir?: string;\n}\n\nexport const GET_STATS = gql`\nquery (\n    $page : Int! = 1,\n    $take: Int! = 25,\n    $search: String = \"\",\n    $sort: MARKET_CAP_SORT = MARKET_CAP,\n    $sort_dir: OPTIONAL_COING_META_FIELDS  = DESC\n    )\n{\n  result: coinStats (page: $page, take: $take, search: $search, sort: $sort, sort_dir: $sort_dir)\n  {\n    id\n    symbol\n    name\n    usd_price\n    creationDate\n    cmc_rank\n    max_supply\n    circulating_supply\n    total_supply\n    market_cap_usd\n    icon\n    atl\n    ath\n    platform\n    {\n      id\n      name\n      symbol\n      token_address\n    }    \n    sparkline_in_7d\n  }\n}\n`;\n\n//create hooks \nexport const useGetStats = (args: ARGS) => {\n\n    const { loading, error, data, fetchMore } = useQuery(GET_STATS, {\n        variables: args\n    });\n\n\n    //add load more function\n    const loadMore = (args: ARGS) => {\n        fetchMore({\n            variables: {\n                page: args.page,\n                take: args.take,\n                search: args.search,\n                sort: args.sort,\n                sort_dir: args.sort_dir\n            },\n            updateQuery: (prev: any, { fetchMoreResult }) => {\n\n                if (!fetchMoreResult)\n                    return prev;\n\n                return Object.assign({}, prev, {\n                    result: [ ...prev.result, ...fetchMoreResult.result ]\n                });\n            }\n        });\n    }\n\n    return {\n        loadMore,\n        loading,\n        error,\n        data: data?.result || [],\n    }\n}  ","import { alpha, Theme, useTheme, styled } from '@mui/material/styles';\nimport { BoxProps } from '@mui/material';\nimport { ColorSchema } from '../theme/palette';\n\ntype LabelColor = 'default' | 'primary' | 'secondary' | 'info' | 'success' | 'warning' | 'error';\n\ntype LabelVariant = 'filled' | 'outlined' | 'ghost';\n\nconst RootStyle = styled('span')(\n  ({\n    theme,\n    ownerState,\n  }: {\n    theme: Theme;\n    ownerState: {\n      color: LabelColor;\n      variant: LabelVariant;\n    };\n  }) => {\n    const isLight = theme.palette.mode === 'light';\n    const { color, variant } = ownerState;\n\n    const styleFilled = (color: ColorSchema) => ({\n      color: theme.palette[ color ].contrastText,\n      backgroundColor: theme.palette[ color ].main,\n    });\n\n    const styleOutlined = (color: ColorSchema) => ({\n      color: theme.palette[ color ].main,\n      backgroundColor: 'transparent',\n      border: `1px solid ${theme.palette[ color ].main}`,\n    });\n\n    const styleGhost = (color: ColorSchema) => ({\n      color: theme.palette[ color ][ isLight ? 'dark' : 'light' ],\n      backgroundColor: alpha(theme.palette[ color ].main, 0.16),\n    });\n\n    return {\n      height: 22,\n      minWidth: 22,\n      lineHeight: 0,\n      borderRadius: 6,\n      cursor: 'default',\n      alignItems: 'center',\n      whiteSpace: 'nowrap',\n      display: 'inline-flex',\n      justifyContent: 'center',\n      padding: theme.spacing(0, 1),\n      color: theme.palette.grey[ 800 ],\n      fontSize: theme.typography.pxToRem(12),\n      fontFamily: theme.typography.fontFamily,\n      backgroundColor: theme.palette.grey[ 300 ],\n      fontWeight: theme.typography.fontWeightBold,\n\n      ...(color !== 'default'\n        ? {\n          ...(variant === 'filled' && { ...styleFilled(color) }),\n          ...(variant === 'outlined' && { ...styleOutlined(color) }),\n          ...(variant === 'ghost' && { ...styleGhost(color) }),\n        }\n        : {\n          ...(variant === 'outlined' && {\n            backgroundColor: 'transparent',\n            color: theme.palette.text.primary,\n            border: `1px solid ${theme.palette.grey[ 500_32 ]}`,\n          }),\n          ...(variant === 'ghost' && {\n            color: isLight ? theme.palette.text.secondary : theme.palette.common.white,\n            backgroundColor: theme.palette.grey[ 500_16 ],\n          }),\n        }),\n    };\n  }\n);\n\n\ninterface Props extends BoxProps {\n  color?: LabelColor;\n  variant?: LabelVariant;\n}\n\nexport default function Label({ color = 'default', variant = 'ghost', children, sx }: Props) {\n  const theme = useTheme();\n\n  return (\n    <RootStyle ownerState={{ color, variant }} sx={sx} theme={theme}>\n      {children}\n    </RootStyle>\n  );\n}\n","import React from \"react\";\nimport { Box, LinearProgress, Stack, Typography } from '@mui/material';\nimport Tooltip, { TooltipProps, tooltipClasses } from '@mui/material/Tooltip';\nimport { styled } from '@mui/material/styles';\n\nimport { fNumber } from \"src/utils/formatNumber\";\n\ntype Props = {\n    symbol: string;\n    circulating: number;\n    maxSupply: number;\n    totalSupply: number;\n\n}\n\ninterface HtmlTooltipProps extends TooltipProps {\n    width?: number;\n}\n\nconst HtmlTooltip = styled(({ className, width, ...props }: HtmlTooltipProps) => (\n    <Tooltip\n        {...props}\n        classes={{ popper: className }}\n    />\n))(({ theme }) => ({\n    [ `& .${tooltipClasses.tooltip}` ]: {\n        backgroundColor: theme.palette.background.paper,\n        color: theme.palette.text.primary,\n        maxWidth: 330,\n        fontSize: theme.typography.pxToRem(12),\n        border: '1px solid #dadde9',\n    },\n}));\n\n\nfunction CirculatingSupply({ symbol, circulating, maxSupply, totalSupply }: Props) {\n\n    const val = Number(maxSupply > 0 ? ((circulating / maxSupply) * 100).toFixed(2) : 0);\n\n    return (\n        <Box sx={{ width: '100%' }}>\n            <HtmlTooltip\n                title={\n                    <React.Fragment>\n                        <Box\n                            width={300}\n                        >\n                            <Stack\n                                direction={\"row\"}\n                            >\n                                <Typography>\n                                    Percentage\n                                </Typography>\n                                <Box sx={{ flexGrow: 1 }} />\n                                <Typography>\n                                    {`${val}%`}\n                                </Typography>\n                            </Stack>\n                            <Stack\n                                p={2}\n                            >\n                                <LinearProgress\n                                    variant=\"determinate\"\n                                    value={val}\n                                    sx={{\n                                        height: 5,\n                                        borderRadius: 4,\n                                    }}\n                                />\n                            </Stack>\n                            <Stack\n                                direction={\"row\"}\n                            >\n                                <Typography>\n                                    Circulating Supply\n                                </Typography>\n                                <Box sx={{ flexGrow: 1 }} />\n                                <Typography color=\"text.disabled\">\n                                    {`${fNumber(circulating)} ${symbol}`}\n                                </Typography>\n                            </Stack>\n                            <Stack\n                                direction={\"row\"}\n                            >\n                                <Typography>\n                                    Max Supply\n                                </Typography>\n                                <Box sx={{ flexGrow: 1 }} />\n                                <Typography color=\"text.disabled\">\n                                    {`${fNumber(maxSupply)} ${symbol}`}\n                                </Typography>\n                            </Stack>\n                        </Box>\n                    </React.Fragment>\n                }\n            >\n                <div>\n                    <Typography>\n                        {`${fNumber(totalSupply)} ${symbol}`}\n                    </Typography>\n                    {maxSupply > 0 && (\n                        <LinearProgress\n                            variant=\"determinate\"\n                            value={val}\n                            sx={{\n                                height: 7,\n                                borderRadius: 4,\n                            }}\n                        />\n                    )}\n                </div>\n            </HtmlTooltip>\n\n        </Box>\n    );\n}\n\nexport default CirculatingSupply;","import ReactApexChart from 'react-apexcharts';\nimport merge from 'lodash/merge';\n\nimport { BaseOptionChart } from \"src/components/chart\";\nimport { fNumber } from \"src/utils/formatNumber\";\n\ntype Props = {\n    chartColor: string;\n    chartData: number[];\n}\n\nfunction ChartSparkLine({ chartColor, chartData }: Props) {\n\n    const chartOptions = merge(BaseOptionChart(), {\n        colors: [ chartColor ],\n        chart: { animations: { enabled: true }, sparkline: { enabled: true } },\n        stroke: { width: 2 },\n        tooltip: {\n            x: { show: false },\n            y: {\n                formatter: (seriesName: string) => fNumber(seriesName),\n                title: {\n                    formatter: () => '',\n                },\n            },\n            marker: { show: false },\n        },\n    });\n\n    return (\n        <ReactApexChart\n            type=\"line\"\n            series={[ { data: chartData } ]}\n            options={chartOptions}\n            width={120}\n            height={80} />\n    );\n}\n\nexport default ChartSparkLine;\n","import { ApexOptions } from 'apexcharts';\nimport { useTheme } from '@mui/material/styles';\n\n\nexport default function BaseOptionChart(): ApexOptions {\n  const theme = useTheme();\n\n  const LABEL_TOTAL = {\n    show: true,\n    label: 'Total',\n    color: theme.palette.text.secondary,\n    fontSize: theme.typography.subtitle2.fontSize as string,\n    fontWeight: theme.typography.subtitle2.fontWeight,\n    lineHeight: theme.typography.subtitle2.lineHeight,\n  };\n\n  const LABEL_VALUE = {\n    offsetY: 8,\n    color: theme.palette.text.primary,\n    fontSize: theme.typography.h3.fontSize as string,\n    fontWeight: theme.typography.h3.fontWeight,\n    lineHeight: theme.typography.h3.lineHeight,\n  };\n\n  return {\n    // Colors\n    colors: [\n      theme.palette.primary.main,\n      theme.palette.chart.yellow[ 0 ],\n      theme.palette.chart.blue[ 0 ],\n      theme.palette.chart.violet[ 0 ],\n      theme.palette.chart.green[ 0 ],\n      theme.palette.chart.red[ 0 ],\n    ],\n\n    // Chart\n    chart: {\n      toolbar: { show: false },\n      zoom: { enabled: false },\n      // animations: { enabled: false },\n      foreColor: theme.palette.text.disabled,\n      fontFamily: theme.typography.fontFamily,\n    },\n\n    // States\n    states: {\n      hover: {\n        filter: {\n          type: 'lighten',\n          value: 0.04,\n        },\n      },\n      active: {\n        filter: {\n          type: 'darken',\n          value: 0.88,\n        },\n      },\n    },\n\n    // Fill\n    fill: {\n      opacity: 1,\n      gradient: {\n        type: 'vertical',\n        shadeIntensity: 0,\n        opacityFrom: 0.4,\n        opacityTo: 0,\n        stops: [ 0, 100 ],\n      },\n    },\n\n    // Datalabels\n    dataLabels: { enabled: false },\n\n    // Stroke\n    stroke: {\n      width: 3,\n      curve: 'smooth',\n      lineCap: 'round',\n    },\n\n    // Grid\n    grid: {\n      strokeDashArray: 3,\n      borderColor: theme.palette.divider,\n    },\n\n    // Xaxis\n    xaxis: {\n      axisBorder: { show: false },\n      axisTicks: { show: false },\n    },\n\n    // Markers\n    markers: {\n      size: 0,\n      strokeColors: theme.palette.background.paper,\n    },\n\n    // Tooltip\n    tooltip: {\n      x: {\n        show: false,\n      },\n    },\n\n    // Legend\n    legend: {\n      show: true,\n      fontSize: String(13),\n      position: 'top',\n      horizontalAlign: 'right',\n      markers: {\n        radius: 12,\n      },\n      fontWeight: 500,\n      itemMargin: { horizontal: 12 },\n      labels: {\n        colors: theme.palette.text.primary,\n      },\n    },\n\n    // plotOptions\n    plotOptions: {\n      // Bar\n      bar: {\n        columnWidth: '28%',\n        borderRadius: 4,\n      },\n      // Pie + Donut\n      pie: {\n        donut: {\n          labels: {\n            show: true,\n            value: LABEL_VALUE,\n            total: LABEL_TOTAL,\n          },\n        },\n      },\n      // Radialbar\n      radialBar: {\n        track: {\n          strokeWidth: '100%',\n          background: theme.palette.grey[ 500_16 ],\n        },\n        dataLabels: {\n          value: LABEL_VALUE,\n          total: LABEL_TOTAL,\n        },\n      },\n      // Radar\n      radar: {\n        polygons: {\n          fill: { colors: [ 'transparent' ] },\n          strokeColors: theme.palette.divider,\n          connectorColors: theme.palette.divider,\n        },\n      },\n      // polarArea\n      polarArea: {\n        rings: {\n          strokeColor: theme.palette.divider,\n        },\n        spokes: {\n          connectorColors: theme.palette.divider,\n        },\n      },\n    },\n\n    // Responsive\n    responsive: [\n      {\n        // sm\n        breakpoint: theme.breakpoints.values.sm,\n        options: {\n          plotOptions: { bar: { columnWidth: '40%' } },\n        },\n      },\n      {\n        // md\n        breakpoint: theme.breakpoints.values.md,\n        options: {\n          plotOptions: { bar: { columnWidth: '32%' } },\n        },\n      },\n    ],\n  };\n}\n","export type Order = 'asc' | 'desc';\n\nexport function stableSort<T>(array: readonly T[], comparator: (a: T, b: T) => number) {\n    const stabilizedThis = array.map((el, index) => [ el, index ] as [ T, number ]);\n    stabilizedThis.sort((a, b) => {\n        const order = comparator(a[ 0 ], b[ 0 ]);\n        if (order !== 0) {\n            return order;\n        }\n        return a[ 1 ] - b[ 1 ];\n    });\n    return stabilizedThis.map((el) => el[ 0 ]);\n}\n\nexport function getComparator<Key extends keyof any>(\n    order: Order,\n    orderBy: Key,\n): (\n    a: { [ key in Key ]: number | string },\n    b: { [ key in Key ]: number | string },\n) => number {\n    return order === 'desc'\n        ? (a, b) => descendingComparator(a, b, orderBy)\n        : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction descendingComparator<T>(a: T, b: T, orderBy: keyof T) {\n    if (b[ orderBy ] < a[ orderBy ]) {\n        return -1;\n    }\n    if (b[ orderBy ] > a[ orderBy ]) {\n        return 1;\n    }\n    return 0;\n}","import React, { useEffect } from \"react\";\nimport { useTheme } from '@mui/material/styles';\nimport { Stack, Box, Typography, Table, TableRow, TableBody, TableCell, TableHead, TableContainer, Avatar, Paper, TableSortLabel, TablePagination, FormControlLabel, Switch } from '@mui/material';\nimport { visuallyHidden } from '@mui/utils';\n\nimport Label from 'src/components/Label';\nimport Scrollbar from 'src/components/Scrollbar';\nimport { fCurrency, fNumber } from \"src/utils/formatNumber\";\n\nimport CirculatingSupply from \"./CirculatingSupply\";\nimport ChartSparkLine from \"./ChartSparkLine\";\nimport { getComparator, Order, stableSort } from \"src/utils/sort\";\n\ntype TableColumnProps = {\n    cellId: string;\n    type: 'number' | 'string' | 'currency' | 'chart';\n    align?: 'left' | 'right';\n    orderBy?: string;\n    sortDirection: 'asc' | 'desc' | false;\n    onRequestSort?: (event: React.MouseEvent<unknown>, property: string) => void;\n    children: React.ReactNode;\n}\n\nfunction TableColumn({ cellId, sortDirection, align, orderBy, onRequestSort, children }: TableColumnProps) {\n\n    const createSortHandler = (property: string) => (event: React.MouseEvent<unknown>) => {\n        onRequestSort?.(event, property);\n    };\n\n    return (\n        <TableCell\n            align={align}\n            sortDirection={orderBy === cellId ? sortDirection : false}\n        >\n            {sortDirection === false ?\n                children :\n                <TableSortLabel\n                    active={orderBy === cellId}\n                    direction={orderBy === cellId ? sortDirection : 'asc'}\n                    onClick={createSortHandler(cellId)}\n                >\n                    {children}\n                    {orderBy === cellId ? (\n                        <Box component=\"span\" sx={visuallyHidden}>\n                            {sortDirection === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                        </Box>\n                    ) : null}\n                </TableSortLabel>\n            }\n        </TableCell>\n    );\n}\n\nexport function TablePresentation({ data }: { data: any[]; }) {\n\n    const theme = useTheme();\n    const [ order, setOrder ] = React.useState<Order>('asc');\n    const [ orderBy, setOrderBy ] = React.useState<string>('cmc_rank');\n    const [ page, setPage ] = React.useState(0);\n    const [ rowsPerPage, setRowsPerPage ] = React.useState(5);\n    const [ rows, setRows ] = React.useState(data);\n    const [ dense, setDense ] = React.useState(false);\n\n    useEffect(() => {\n        setRows(data);\n    }, [ data ]);\n\n    const handleRequestSort = (event: React.MouseEvent<unknown>, property: string,) => {\n\n        const isAsc = orderBy === property && order === 'asc';\n        setOrder(isAsc ? 'desc' : 'asc');\n        setOrderBy(property);\n    };\n\n    const handleChangePage = (event: unknown, newPage: number) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setRowsPerPage(parseInt(event.target.value, 10));\n        setPage(0);\n    };\n\n    const handleChangeDense = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setDense(event.target.checked);\n    };\n\n    const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - rows.length) : 0;\n    const renderData = stableSort(rows, getComparator(order, orderBy))\n        .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n\n\n    return (\n        <div>\n            <Scrollbar>\n                <Box sx={{ width: '100%' }} p={2}>\n                    <Stack direction={\"row\"}>\n                        <FormControlLabel\n                            control={<Switch checked={dense} onChange={handleChangeDense} />}\n                            label=\"Dense\"\n                        />\n                    </Stack>\n                    <TableContainer sx={{ minWidth: 320 }} component={Paper}>\n                        <Table size={dense ? 'small' : 'medium'}>\n                            <TableHead>\n                                <TableRow>\n                                    <TableColumn\n                                        cellId=\"cmc_rank\"\n                                        sortDirection=\"asc\"\n                                        type=\"number\"\n                                        align=\"left\"\n                                        onRequestSort={handleRequestSort}\n                                    >#\n                                    </TableColumn>\n                                    <TableColumn\n                                        cellId=\"name\"\n                                        sortDirection=\"asc\"\n                                        type=\"string\"\n                                        align=\"left\"\n                                        onRequestSort={handleRequestSort}\n                                    >\n                                        Name\n                                    </TableColumn>\n                                    <TableColumn\n                                        cellId=\"usd_price\"\n                                        sortDirection=\"asc\"\n                                        type=\"number\"\n                                        align=\"left\"\n                                        onRequestSort={handleRequestSort}\n                                    >\n                                        Price\n                                    </TableColumn>\n                                    <TableColumn\n                                        cellId=\"market_cap_usd\"\n                                        sortDirection=\"asc\"\n                                        type=\"number\"\n                                        align=\"left\"\n                                        onRequestSort={handleRequestSort}\n                                    >\n                                        MarketCap\n                                    </TableColumn>\n                                    <TableColumn\n                                        cellId=\"circulating_supply\"\n                                        sortDirection=\"asc\"\n                                        type=\"string\"\n                                        align=\"left\"\n                                        onRequestSort={handleRequestSort}\n                                    >\n                                        Circulating Supply\n                                    </TableColumn>\n                                    <TableColumn\n                                        cellId=\"ath\"\n                                        sortDirection={false}\n                                        type=\"string\"\n                                        align=\"left\"\n                                    >\n                                        A.T. Low / High\n                                    </TableColumn>\n                                    <TableColumn\n                                        cellId=\"last_7_days\"\n                                        sortDirection={false}\n                                        type=\"string\"\n                                        align=\"left\"\n                                    >\n                                        Last 7 Days\n                                    </TableColumn>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                <br />\n                                {renderData.map((row: any) => (\n                                    <TableRow hover key={row.id}>\n                                        <TableCell>{fNumber(row.cmc_rank || 0)}</TableCell>\n                                        <TableCell>\n                                            <Stack direction={\"row\"} alignItems={\"center\"} gap={1}>\n                                                <Avatar\n                                                    sizes=\"small\"\n                                                    variant=\"circular\"\n                                                    sx={{ width: 24, height: 24 }}\n                                                    src={row.icon} />\n                                                <Stack\n                                                    direction={\"row\"}\n                                                    alignItems={\"baseline\"}\n                                                    gap={0.5}\n                                                >\n                                                    <Typography component=\"p\" fontWeight=\"bold\">\n                                                        {row.name}\n                                                    </Typography>\n                                                    <Typography\n                                                        component=\"span\"\n                                                        fontWeight=\"bold\"\n                                                        variant=\"caption\"\n                                                        color={\"text.secondary\"}\n                                                    >\n                                                        {row.symbol}\n                                                    </Typography>\n                                                </Stack>\n                                            </Stack>\n                                        </TableCell>\n                                        <TableCell>{fCurrency(row.usd_price || 0)}</TableCell>\n                                        <TableCell>{fCurrency(row.market_cap_usd || 0)}</TableCell>\n                                        <TableCell>\n                                            <CirculatingSupply\n                                                symbol={String(row.symbol || '')}\n                                                circulating={Number(row.circulating_supply || 0)}\n                                                totalSupply={Number(row.total_supply || 0)}\n                                                maxSupply={Number(row.max_supply || 0)} />\n\n                                        </TableCell>\n                                        <TableCell>\n                                            <Stack direction={\"row\"} alignItems={\"center\"} gap={1}>\n                                                <Label\n                                                    color=\"error\"\n                                                    variant={theme.palette.mode === 'light' ? 'ghost' : 'filled'}\n                                                >\n                                                    {fCurrency(row.atl || 0)}\n                                                </Label>\n\n                                                <Label\n                                                    color=\"success\"\n                                                    variant={theme.palette.mode === 'light' ? 'ghost' : 'filled'}\n                                                >\n                                                    {fCurrency(row.ath || 0)}\n                                                </Label>\n                                            </Stack>\n                                        </TableCell>\n                                        <TableCell>\n                                            <ChartSparkLine\n                                                chartColor={theme.palette.primary.main}\n                                                chartData={row.sparkline_in_7d || []} />\n                                        </TableCell>\n                                    </TableRow>\n                                ))}\n\n                                {emptyRows > 0 && (\n                                    <TableRow style={{ height: 53 * emptyRows, }} >\n                                        <TableCell colSpan={6} />\n                                    </TableRow>\n                                )}\n                            </TableBody>\n                        </Table>\n                    </TableContainer>\n                    <TablePagination\n                        rowsPerPageOptions={[ 5, 10, 25 ]}\n                        component=\"div\"\n                        count={rows.length}\n                        rowsPerPage={rowsPerPage}\n                        page={page}\n                        onPageChange={handleChangePage}\n                        onRowsPerPageChange={handleChangeRowsPerPage}\n                    />\n                </Box>\n            </Scrollbar>\n        </div>\n    );\n}\n","import { Card, Skeleton } from \"@mui/material\";\nimport Page from 'src/components/Page';\nimport { useGetStats } from './graphql';\nimport { TablePresentation } from \"./TablePresentation\";\n\nexport default function MarketCapPage() {\n\n    const { data, loading, error } = useGetStats({});\n    console.log(data, loading, error);\n\n    return (\n        <Page title=\"Crypto in Numbers | Stats\">\n            {loading && <Skeleton variant=\"rectangular\" animation=\"wave\" width={210} height={118} />}\n            <Card>\n                <TablePresentation data={data || []} />\n            </Card>\n        </Page>\n    );\n}\n\n\n","import numeral from 'numeral';\n\nif (numeral.locales[ 'en' ] === undefined) {\n    numeral.register('locale', 'en', {\n        delimiters: {\n            thousands: ',',\n            decimal: '.',\n        },\n        abbreviations: {\n            thousand: 'k',\n            million: 'm',\n            billion: 'b',\n            trillion: 't'\n        },\n        ordinal: function (num: number) {\n            return num === 1 ? 'st' : num === 2 ? 'nd' : num === 3 ? 'rd' : 'th';\n        },\n        currency: {\n            symbol: '$.'\n        }\n    });\n}\n\nnumeral.locale('en');\n\nexport function fCurrency(number: string | number) {\n    return numeral(number).format(Number.isInteger(number) ? '$0,0' : '$0,0.00');\n}\n\nexport function fCurrencyCap(number: string | number, upper: boolean = true) {\n\n    const resp = numeral(number).format('($ 0.00 a)');\n    return upper ? resp.toUpperCase() : resp;\n}\n\nexport function fPercent(number: number) {\n    return numeral(number / 100).format('0.0%');\n}\n\nexport function fNumber(number: string | number) {\n    return numeral(number).format();\n}\n\nexport function fNumberFloat(number: string | number, fomat: string = '0,0.00') {\n    return numeral(number).format(fomat);\n}\n\nexport function fShortenNumber(number: string | number) {\n    return numeral(number).format('0.00a');\n}\n\nexport function fData(number: string | number) {\n    return numeral(number).format('0.0 b');\n}"],"names":["Page","forwardRef","ref","children","title","meta","other","paddingLeft","paddingRight","GET_STATS","gql","RootStyle","styled","theme","ownerState","isLight","palette","mode","color","variant","height","minWidth","lineHeight","borderRadius","cursor","alignItems","whiteSpace","display","justifyContent","padding","spacing","grey","fontSize","typography","pxToRem","fontFamily","backgroundColor","fontWeight","fontWeightBold","contrastText","main","styleFilled","border","styleOutlined","alpha","styleGhost","text","primary","secondary","common","white","Label","sx","useTheme","HtmlTooltip","className","props","width","Tooltip","classes","popper","tooltipClasses","background","paper","maxWidth","symbol","circulating","maxSupply","totalSupply","val","Number","toFixed","Box","Stack","direction","Typography","flexGrow","p","LinearProgress","value","fNumber","chartColor","chartData","chartOptions","merge","LABEL_TOTAL","show","label","subtitle2","LABEL_VALUE","offsetY","h3","colors","chart","yellow","blue","violet","green","red","toolbar","zoom","enabled","foreColor","disabled","states","hover","filter","type","active","fill","opacity","gradient","shadeIntensity","opacityFrom","opacityTo","stops","dataLabels","stroke","curve","lineCap","grid","strokeDashArray","borderColor","divider","xaxis","axisBorder","axisTicks","markers","size","strokeColors","tooltip","x","legend","String","position","horizontalAlign","radius","itemMargin","horizontal","labels","plotOptions","bar","columnWidth","pie","donut","total","radialBar","track","strokeWidth","radar","polygons","connectorColors","polarArea","rings","strokeColor","spokes","responsive","breakpoint","breakpoints","values","sm","options","md","BaseOptionChart","animations","sparkline","y","formatter","seriesName","marker","series","data","descendingComparator","a","b","orderBy","TableColumn","property","cellId","sortDirection","align","onRequestSort","TableCell","TableSortLabel","onClick","event","component","visuallyHidden","TablePresentation","React","order","setOrder","setOrderBy","page","setPage","rowsPerPage","setRowsPerPage","rows","setRows","dense","setDense","useEffect","handleRequestSort","emptyRows","Math","max","length","renderData","array","comparator","stabilizedThis","map","el","index","sort","stableSort","getComparator","slice","Scrollbar","FormControlLabel","control","Switch","checked","onChange","target","TableContainer","Paper","Table","TableHead","TableRow","TableBody","row","cmc_rank","gap","Avatar","sizes","src","icon","name","fCurrency","usd_price","market_cap_usd","circulating_supply","total_supply","max_supply","atl","ath","sparkline_in_7d","id","style","colSpan","TablePagination","rowsPerPageOptions","count","onPageChange","newPage","onRowsPerPageChange","parseInt","MarketCapPage","args","useQuery","variables","loading","error","fetchMore","loadMore","take","search","sort_dir","updateQuery","prev","fetchMoreResult","Object","assign","result","useGetStats","console","log","Skeleton","animation","Card","number","numeral","format","isInteger","fCurrencyCap","upper","resp","toUpperCase","undefined","delimiters","thousands","decimal","abbreviations","thousand","million","billion","trillion","ordinal","num","currency"],"sourceRoot":""}