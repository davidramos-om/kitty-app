{"version":3,"file":"static/js/534.4522643c.chunk.js","mappings":"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","sources":["components/Page.tsx","components/input/CustomInput.tsx","components/selectors/CoinModalSelector.tsx","components/input/CoinField.tsx","pages/SwapPage.tsx","utils/formatNumber.ts"],"sourcesContent":["import { forwardRef, ReactNode } from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { Box, BoxProps } from '@mui/material';\n\ninterface Props extends BoxProps {\n  children: ReactNode;\n  meta?: ReactNode;\n  title: string;\n}\n\nconst Page = forwardRef<HTMLDivElement, Props>(({ children, title = '', meta, ...other }, ref) => (\n  <>\n    <Helmet>\n      <title>{`${title} | Kitty App v.23.02.08.0250`}</title>\n      {meta}\n    </Helmet>\n\n    <Box\n      ref={ref}\n      paddingLeft={6}\n      paddingRight={6}\n      {...other}\n    >\n      {children}\n    </Box>\n  </>\n));\n\nexport default Page;\n","import React from 'react';\nimport { useInput } from '@mui/base';\nimport { styled } from '@mui/system';\n\nconst blue = {\n    100: '#DAECFF',\n    200: '#80BFFF',\n    400: '#3399FF',\n    600: '#0072E5',\n};\n\nconst grey = {\n    50: '#F3F6F9',\n    100: '#E7EBF0',\n    200: '#E0E3E7',\n    300: '#CDD2D7',\n    400: '#B2BAC2',\n    500: '#A0AAB4',\n    600: '#6F7E8C',\n    700: '#3E5060',\n    800: '#2D3843',\n    900: '#1A2027',\n};\n\nconst StyledInputElement = styled('input')(\n    ({ theme }) => `\n  width: 320px;\n  font-size: 0.875rem;\n  font-family: IBM Plex Sans, sans-serif;\n  font-weight: 400;\n  line-height: 1.5;\n  color: ${theme.palette.mode === 'dark' ? grey[ 300 ] : grey[ 900 ]};\n  background: ${theme.palette.mode === 'dark' ? grey[ 900 ] : grey[ 50 ]};\n  border: 1px solid ${theme.palette.mode === 'dark' ? grey[ 800 ] : grey[ 300 ]};\n  border-radius: 8px;\n  padding: 12px 12px;\n\n  &:hover {\n    background: ${theme.palette.mode === 'dark' ? null : grey[ 100 ]};\n    border-color: ${theme.palette.mode === 'dark' ? grey[ 700 ] : grey[ 400 ]};\n  }\n\n  &:focus {\n    outline: 3px solid ${theme.palette.mode === 'dark' ? blue[ 600 ] : blue[ 100 ]};\n  }\n`,\n);\n\nconst CustomInput = React.forwardRef(function CustomInput(props: any, ref: any) {\n    const { getRootProps, getInputProps } = useInput(props, ref);\n\n    return (\n        <div {...getRootProps()}>\n            <StyledInputElement {...props} {...getInputProps()} />\n        </div>\n    );\n});\n\nexport default function UserInput() {\n    return <CustomInput aria-label=\"custom input\" placeholder=\"Type something...\" />;\n}\n","import React, { Fragment } from \"react\";\nimport { Avatar, Chip, IconButton, Typography, Box, Grid, Tooltip } from \"@mui/material\";\nimport CloseIcon from '@mui/icons-material/Close';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\n\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport Divider from '@mui/material/Divider';\nimport ListItemText from '@mui/material/ListItemText';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\n\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown'\nimport { useQuery, gql } from '@apollo/client';\nimport { Coin } from \"src/types/Coin\";\nimport { fCurrency, fCurrencyCap } from 'src/utils/formatNumber';\n\n\ntype Props = {\n    value: string,\n    placeholder?: string,\n}\n\n\nexport const GET_COINS = gql`\nquery\n{\n  coins : coinStats(skip : 0 take : 100 sort :  MARKET_CAP)\n  { \n\tid\n    name\n    symbol\n    rank : cmc_rank\n    icon\n    usd_price\n    market_cap_usd    \n    total_supply\n    max_supply\n    circulating_supply    \n  }\n}\n`;\n\ntype CurrencyItemProps = {\n    coin: Coin,\n}\n\nexport function CurrencyItem({ coin }: CurrencyItemProps) {\n\n    const { name, symbol, icon, rank, usd_price, market_cap_usd } = coin;\n\n    const handleOpenLink = () => {\n        window.open(`https://coinmarketcap.com/currencies/${name.toLowerCase()}/`, '_blank', 'noopener noreferrer');\n    }\n\n    return (\n        <ListItem\n            alignItems=\"flex-start\"\n            sx={{\n                '&:hover': {\n                    backgroundColor: 'rgba(0, 0, 0, 0.09)',\n                    borderRadius: '0.25rem',\n                    cursor: 'pointer',\n                }\n            }\n            }\n        >\n            <ListItemAvatar>\n                <Tooltip title={\"Open in CoinMarketCap\"}>\n                    <Avatar alt={symbol} src={icon} onClick={handleOpenLink} sx={{ cursor: 'pointer' }} />\n                </Tooltip>\n            </ListItemAvatar>\n            <ListItemText\n                disableTypography\n                primary={symbol}\n                secondary={\n                    <Fragment>\n                        <Grid container spacing={1} justifyContent=\"space-between\" alignItems=\"center\">\n                            <Grid item xs={5}>\n                                <Typography\n                                    sx={{ display: 'inline' }}\n                                    component=\"span\"\n                                    variant=\"body2\"\n                                    color=\"text.primary\"\n                                >\n                                    {name}\n                                </Typography>\n                            </Grid>\n                            <Grid item xs={3}>\n                                <Typography variant=\"body2\" color=\"text.secondary\" >\n                                    {fCurrency(usd_price || 0)}\n                                </Typography>\n                            </Grid>\n                            <Grid item xs={3}>\n                                <Typography variant=\"body2\" color=\"text.secondary\" >\n                                    {fCurrencyCap(market_cap_usd || 0, true)}\n                                </Typography>\n                            </Grid>\n                            <Grid item xs={1}>\n                                <Typography variant=\"body2\" color=\"text.secondary\">\n                                    {rank}\n                                </Typography>\n                            </Grid>\n                        </Grid>\n                    </Fragment>\n                }\n            />\n        </ListItem>\n    );\n}\n\ntype CurrencyListProps = {\n    coins: Coin[],\n}\n\nexport function CurrencyList({ coins = [] }: CurrencyListProps) {\n\n    return (\n        <List sx={{ width: '100%', bgcolor: 'background.paper' }}>\n            {coins.map(coin => (\n                <CurrencyItem coin={coin} key={coin.id} />\n            ))}\n        </List>\n    );\n}\n\nexport default function CoinModalSelector({ value, placeholder = 'Select a token' }: Props) {\n\n\n    const [ coins, setCoins ] = React.useState<Coin[]>([]);\n    const [ open, setOpen ] = React.useState(false);\n    const [ , setSelectedCoin ] = React.useState(null);\n\n    const { data } = useQuery(GET_COINS, {\n        fetchPolicy: 'cache-first',\n        onCompleted: (data) => {\n            console.log(data);\n\n            const _coins: Coin[] = data.coins?.map((_c: any) => {\n\n                const _coin: Coin = {\n                    id: String(_c.id || ''),\n                    name: String(_c.name || ''),\n                    symbol: String(_c.symbol || ''),\n                    slug: String(_c.slug || ''),\n                    rank: Number(_c.rank || Number.MAX_SAFE_INTEGER),\n                    icon: String(_c.icon || ''),\n                    usd_price: Number(_c.usd_price || 0),\n                    market_cap_usd: Number(_c.market_cap_usd || 0),\n                    circulating_supply: Number(_c.circulating_supply || 0),\n                    total_supply: Number(_c.total_supply || 0),\n                    max_supply: Number(_c.max_supply || 0),\n                    platform: {\n                        id: String(_c.platform?.id || ''),\n                        name: String(_c.platform?.name || ''),\n                        symbol: String(_c.platform?.symbol || ''),\n                        slug: String(_c.platform?.slug || ''),\n                        token_address: String(_c.platform?.token_address || ''),\n                    }\n                };\n\n                return _coin;\n            });\n\n            setCoins(_coins);\n        },\n    });\n\n    console.info(\"data\", data);\n\n    const handleClick = () => {\n\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    }\n\n    const handleOpen = () => {\n        setOpen(true);\n    }\n\n    // const handleSelect = (coin: Coin) => {\n    //     setOpen(false);\n    //     console.log(\"coin\", coin);\n    // }\n\n    const handleClear = () => {\n        setOpen(false);\n        setSelectedCoin(null);\n    }\n\n    return (\n        <Fragment>\n            <Chip\n                variant=\"filled\"\n                sx={{ m: '0.2rem' }}\n                label={\n                    <Box sx={{\n                        display: 'flex',\n                        alignItems: 'center',\n                        gap: '0.5rem',\n                        p: '0.5rem',\n                    }} >\n                        <Avatar\n                            alt={value || \"Token\"}\n                            src=\"/static/images/avatar/1.jpg\"\n                            sx={{ width: 24, height: 24 }}\n                        />\n                        <Typography component=\"p\" sx={{ fontFamily: 'Inter custom', fontWeight: 600, }} >\n                            {value || placeholder}\n                        </Typography>\n                    </Box>\n                }\n                onClick={handleOpen}\n                onDelete={handleClick}\n                deleteIcon={<ArrowDropDownIcon />}\n            />\n            <Dialog\n                open={open}\n                onClose={handleClose}\n                fullWidth\n                maxWidth=\"sm\"\n            >\n                <DialogTitle>\n                    <Grid container justifyContent=\"space-between\" alignItems=\"center\">\n                        <Grid item xs={11}>\n                            <Typography variant=\"h6\" sx={{ fontFamily: 'Inter custom', fontWeight: 600, }} >\n                                Select a token\n                            </Typography>\n                        </Grid>\n                        <Grid item xs={1}>\n                            <IconButton onClick={handleClear}>\n                                <CloseIcon />\n                            </IconButton>\n                        </Grid>\n                    </Grid>\n                </DialogTitle>\n                <DialogContent>\n                    <TextField\n                        autoFocus\n                        fullWidth\n                        margin=\"dense\"\n                        id=\"name\"\n                        label=\"Search by name or symbol\"\n                        type=\"search\"\n                        variant=\"outlined\"\n                        autoComplete=\"off\"\n                        sx={{ pb: '1rem' }}\n                    />\n                    <Divider />\n                    <div id=\"currency=list\" style={{ maxHeight: 400, overflow: 'auto' }}>\n                        <CurrencyList coins={coins} />\n                    </div>\n                    <Divider />\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose}>Manage</Button>\n                </DialogActions>\n            </Dialog>\n        </Fragment>\n    );\n\n    // return (\n    //     <Paper\n    //         component=\"div\"\n    //         sx={{\n    //             borderRadius: '1rem',\n    //             display: 'flex',\n    //             alignItems: 'center',\n    //             gap: '0.5rem',\n    //         }}\n    //     >\n    //         <Avatar\n    //             alt={value || \"Token\"}\n    //             src=\"/static/images/avatar/1.jpg\"\n    //             sx={{ width: 24, height: 24 }}\n    //         />\n    //         <Typography component=\"p\" sx={{ fontFamily: 'Inter custom', fontWeight: 600, }} >\n    //             {value || placeholder}\n    //         </Typography>\n    //         <ArrowDropDownIcon />\n    //     </Paper>\n    // );\n}","import Paper from '@mui/material/Paper';\nimport InputBase from '@mui/material/InputBase';\n\nimport CoinModalSelector from 'src/components/selectors/CoinModalSelector';\n\ntype Props = {\n    placeholder?: string,\n}\n\nexport default function CoinField({ placeholder = 'Select a token' }: Props) {\n\n    return (\n        <Paper\n            component=\"form\"\n            sx={{ p: '1.5rem', display: 'flex', alignItems: 'center', width: 400, borderRadius: '1rem' }}\n        >\n            <InputBase\n                placeholder={placeholder}\n                inputProps={{ 'aria-label': 'Token amount' }}\n                value={\"0.0\"}\n                type='number'\n                sx={{\n                    ml: 1,\n                    flex: 1,\n                    fontSize: '1.5rem',\n                    fontFamily: 'Inter custom'\n                }}\n            />\n            <CoinModalSelector value='ETH' />\n        </Paper>\n    );\n}\n","import { Container, Box, Stack } from '@mui/material';\nimport useSettings from '../hooks/useSettings';\nimport Page from 'src/components/Page';\nimport CustomInput from 'src/components/input/CustomInput';\nimport CoinField from 'src/components/input/CoinField';\n\nexport default function SwapPage() {\n\n  const { themeStretch } = useSettings();\n\n  return (\n    <Page title=\"Swap Interface\">\n      <Container maxWidth={themeStretch ? false : 'xl'}>\n        <Box\n          sx={{\n            // width: 300,\n            // mx: 'auto',\n            // mx: \"auto\",\n            // width: 200,\n            m: 2,\n            p: 2,\n            // backgroundColor: 'primary.dark',\n            bgcolor: (theme) =>\n              theme.palette.mode === 'dark' ? '#101010' : 'grey.50',\n            color: (theme) =>\n              theme.palette.mode === 'dark' ? 'grey.300' : 'grey.800',\n            border: '1px solid',\n            borderColor: (theme) =>\n              theme.palette.mode === 'dark' ? 'grey.800' : 'grey.300',\n            borderRadius: 2,\n            textAlign: 'center',\n            fontSize: '0.875rem',\n            fontWeight: '700',\n            // border: '1px dashed grey',\n            // '&:hover': {\n            //   backgroundColor: 'primary.main',\n            //   opacity: [ 0.9, 0.8, 0.7 ],\n            // },\n          }}\n        >\n          <Stack spacing={3}>\n            <Stack direction={{ xs: 'column', sm: 'row' }} spacing={2}>\n              <CustomInput />\n              <CoinField />\n            </Stack>\n          </Stack>\n        </Box>\n      </Container>\n    </Page>\n  );\n}\n","import numeral from 'numeral';\n\nif (numeral.locales[ 'en' ] === undefined) {\n    numeral.register('locale', 'en', {\n        delimiters: {\n            thousands: ',',\n            decimal: '.',\n        },\n        abbreviations: {\n            thousand: 'k',\n            million: 'm',\n            billion: 'b',\n            trillion: 't'\n        },\n        ordinal: function (num: number) {\n            return num === 1 ? 'st' : num === 2 ? 'nd' : num === 3 ? 'rd' : 'th';\n        },\n        currency: {\n            symbol: '$.'\n        }\n    });\n}\n\nnumeral.locale('en');\n\nexport function fCurrency(number: string | number) {\n    return numeral(number).format(Number.isInteger(number) ? '$0,0' : '$0,0.00');\n}\n\nexport function fCurrencyCap(number: string | number, upper: boolean = true) {\n\n    const resp = numeral(number).format('($ 0.00 a)');\n    return upper ? resp.toUpperCase() : resp;\n}\n\nexport function fPercent(number: number) {\n    return numeral(number / 100).format('0.0%');\n}\n\nexport function fNumber(number: string | number) {\n    return numeral(number).format();\n}\n\nexport function fNumberFloat(number: string | number, fomat: string = '0,0.00') {\n    return numeral(number).format(fomat);\n}\n\nexport function fShortenNumber(number: string | number) {\n    return numeral(number).format('0.00a');\n}\n\nexport function fData(number: string | number) {\n    return numeral(number).format('0.0 b');\n}"],"names":["Page","forwardRef","ref","children","title","meta","other","paddingLeft","paddingRight","blue","grey","StyledInputElement","styled","theme","palette","mode","CustomInput","React","props","useInput","getRootProps","getInputProps","UserInput","placeholder","GET_COINS","gql","CurrencyItem","coin","name","symbol","icon","rank","usd_price","market_cap_usd","ListItem","alignItems","sx","backgroundColor","borderRadius","cursor","ListItemAvatar","Tooltip","Avatar","alt","src","onClick","window","open","toLowerCase","ListItemText","disableTypography","primary","secondary","Fragment","Grid","container","spacing","justifyContent","item","xs","Typography","display","component","variant","color","fCurrency","fCurrencyCap","CurrencyList","coins","List","width","bgcolor","map","id","CoinModalSelector","value","setCoins","setOpen","setSelectedCoin","useQuery","fetchPolicy","onCompleted","data","console","log","_coins","_c","String","slug","Number","MAX_SAFE_INTEGER","circulating_supply","total_supply","max_supply","platform","token_address","info","handleClose","Chip","m","label","Box","gap","p","height","fontFamily","fontWeight","onDelete","deleteIcon","ArrowDropDown","Dialog","onClose","fullWidth","maxWidth","DialogTitle","IconButton","Close","DialogContent","TextField","autoFocus","margin","type","autoComplete","pb","Divider","style","maxHeight","overflow","DialogActions","Button","CoinField","Paper","InputBase","inputProps","ml","flex","fontSize","SwapPage","themeStretch","useSettings","Container","border","borderColor","textAlign","Stack","direction","sm","number","numeral","format","isInteger","upper","resp","toUpperCase","fNumber","undefined","delimiters","thousands","decimal","abbreviations","thousand","million","billion","trillion","ordinal","num","currency"],"sourceRoot":""}