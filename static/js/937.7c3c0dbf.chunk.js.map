{"version":3,"file":"static/js/937.7c3c0dbf.chunk.js","mappings":"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","sources":["components/Page.tsx","components/selectors/VirtualizedDataSingleValue.tsx","pages/converter/ConverterWidget.jsx","pages/converter/index.tsx"],"sourcesContent":["import { forwardRef, ReactNode } from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { Box, BoxProps } from '@mui/material';\n\ninterface Props extends BoxProps {\n  children: ReactNode;\n  meta?: ReactNode;\n  title: string;\n}\n\nconst Page = forwardRef<HTMLDivElement, Props>(({ children, title = '', meta, ...other }, ref) => (\n  <>\n    <Helmet>\n      <title>{`${title} | Kitty App v.23.02.08.0250`}</title>\n      {meta}\n    </Helmet>\n\n    <Box\n      ref={ref}\n      paddingLeft={6}\n      paddingRight={6}\n      {...other}\n    >\n      {children}\n    </Box>\n  </>\n));\n\nexport default Page;\n","import { createContext, HTMLAttributes, ReactChild, useState, forwardRef, useContext, useRef, useEffect, Fragment } from 'react';\nimport TextField from '@mui/material/TextField';\nimport Autocomplete, { autocompleteClasses } from '@mui/material/Autocomplete';\nimport useMediaQuery from '@mui/material/useMediaQuery';\nimport ListSubheader from '@mui/material/ListSubheader';\nimport Popper from '@mui/material/Popper';\nimport { useTheme, styled } from '@mui/material/styles';\nimport { VariableSizeList, ListChildComponentProps } from 'react-window';\nimport Typography from '@mui/material/Typography';\n\nconst LISTBOX_PADDING = 8;\n\nfunction renderRow(props: ListChildComponentProps) {\n    const { data, index, style } = props;\n    const dataSet = data[ index ];\n    const inlineStyle = {\n        ...style,\n        top: (style.top as number) + LISTBOX_PADDING,\n    };\n\n    if (dataSet.hasOwnProperty('group')) {\n        return (\n            <ListSubheader key={dataSet.key} component=\"div\" style={inlineStyle}>\n                {dataSet.group}\n            </ListSubheader>\n        );\n    }\n\n    return (\n        <Typography component=\"li\" {...dataSet[ 0 ]} noWrap style={inlineStyle}>\n            {dataSet[ 1 ]}\n        </Typography>\n    );\n}\n\nconst OuterElementContext = createContext({});\n\nconst OuterElementType = forwardRef<HTMLDivElement>((props, ref) => {\n    const outerProps = useContext(OuterElementContext);\n    return <div ref={ref} {...props} {...outerProps} />;\n});\n\nfunction useResetCache(data: any) {\n    const ref = useRef<VariableSizeList>(null);\n    useEffect(() => {\n        if (ref.current != null) {\n            ref.current.resetAfterIndex(0, true);\n        }\n    }, [ data ]);\n    return ref;\n}\n\n// Adapter for react-window\nconst ListboxComponent = forwardRef<\n    HTMLDivElement,\n    HTMLAttributes<HTMLElement>\n>(function ListboxComponent(props, ref) {\n\n    const { children, ...other } = props;\n    const itemData: ReactChild[] = [];\n    (children as ReactChild[]).forEach(\n        (item: ReactChild & { children?: ReactChild[] }) => {\n            itemData.push(item);\n            itemData.push(...(item.children || []));\n        },\n    );\n\n    const theme = useTheme();\n    const smUp = useMediaQuery(theme.breakpoints.up('sm'), {\n        noSsr: true,\n    });\n    const itemCount = itemData.length;\n    const itemSize = smUp ? 36 : 48;\n\n    const getChildSize = (child: ReactChild) => {\n        if (child.hasOwnProperty('group')) {\n            return 48;\n        }\n\n        return itemSize;\n    };\n\n    const getHeight = () => {\n        if (itemCount > 8) {\n            return 8 * itemSize;\n        }\n        return itemData.map(getChildSize).reduce((a, b) => a + b, 0);\n    };\n\n    const gridRef = useResetCache(itemCount);\n\n    return (\n        <div ref={ref}>\n            <OuterElementContext.Provider value={other}>\n                <VariableSizeList\n                    itemData={itemData}\n                    height={getHeight() + 2 * LISTBOX_PADDING}\n                    width=\"100%\"\n                    ref={gridRef}\n                    outerElementType={OuterElementType}\n                    innerElementType=\"ul\"\n                    itemSize={(index) => getChildSize(itemData[ index ])}\n                    overscanCount={5}\n                    itemCount={itemCount}\n                >\n                    {renderRow}\n                </VariableSizeList>\n            </OuterElementContext.Provider>\n        </div>\n    );\n});\n\n\nconst StyledPopper = styled(Popper)({\n    [ `& .${autocompleteClasses.listbox}` ]: {\n        boxSizing: 'border-box',\n        '& ul': {\n            padding: 0,\n            margin: 0,\n        },\n    },\n});\n\n\ntype Props = {\n    options: string[];\n    value: string;\n    label: string;\n    disabled?: boolean;\n    error?: boolean;\n    size?: 'small' | 'medium';\n    variant?: 'standard' | 'outlined' | 'filled';\n    helperText?: string | false | undefined | string[];\n    showSearchMore?: boolean;\n    fullWidth?: boolean;\n    getOptionLabel?: (value: any) => any,\n    onChange: (value: string) => any;\n    onSearchMore?: (keyword: string) => any;\n}\n\nexport default function VirtualizedSingleAutoComplete(\n    {\n        value = '', disabled = false, error = false, label, variant = 'outlined',\n        helperText, options, size = 'medium', showSearchMore = false, fullWidth = true,\n        onChange, onSearchMore, getOptionLabel\n    }: Props) {\n\n    const [ open, setOpen ] = useState(false);\n    const textRef = useRef<HTMLInputElement>();\n    const autoCompleteRef = useRef<HTMLInputElement>();\n\n    const handleSearchMore = () => {\n        if (onSearchMore)\n            onSearchMore(textRef?.current?.value || '');\n    }\n\n    return (\n        <Autocomplete\n            id=\"virtualize-single-auto-completed\"\n            ref={autoCompleteRef}\n            multiple={false}\n            disablePortal={false}\n            autoHighlight={true}\n            fullWidth={fullWidth}\n            disableListWrap\n            disabled={disabled}\n            clearOnBlur\n            clearOnEscape\n            freeSolo={false}\n            openOnFocus={true}\n            noOptionsText={\n                <Typography>\n                    No results\n                    {showSearchMore && (\n                        <Fragment>\n                            <br />\n                            <b onClick={handleSearchMore} style={{ cursor: 'pointer' }} >Search more</b>\n                        </Fragment>\n                    )}\n                </Typography>}\n            size={size}\n            PopperComponent={StyledPopper}\n            ListboxComponent={ListboxComponent}\n            options={options}\n            value={value}\n            renderOption={(props, option) => [ props, option ]}\n            renderGroup={(params) => params}\n            style={{ width: \"100%\" }}\n            onOpen={() => setOpen(true)}\n            onClose={() => setOpen(false)}\n            onChange={(event: any, opt: any) => {\n                if (onChange) {\n                    onChange(opt);\n                }\n                setOpen(false);\n            }}\n            getOptionLabel={(option) => {\n                return open ? option : (getOptionLabel ? getOptionLabel(option) : option)\n            }}\n            renderInput={(params) => {\n                return (\n                    <TextField\n                        {...params}\n                        key={params.id}\n                        inputProps={{\n                            ...params.inputProps,\n                            autoComplete: 'new-password', // trip : disable autocomplete and autofill\n                        }}\n                        fullWidth={fullWidth}\n                        autoComplete=\"off\"\n                        error={error}\n                        label={label}\n                        helperText={helperText}\n                        InputLabelProps={{ shrink: true }}\n                        variant={variant}\n                        inputRef={textRef}\n                    />\n                )\n            }}\n        />\n    );\n}\n","import useSettings from \"src/hooks/useSettings\";\n\nexport default function CoinConverter({ coinId, toCurrency }) {\n\n    const { themeMode, language } = useSettings();\n\n    return (\n        <coingecko-coin-converter-widget\n            coin-id={coinId || \"bitcoin\"}\n            currency={toCurrency || \"usd\"}\n            locale={language}\n            background-color={themeMode === \"dark\" ? \"#1e1e1e\" : \"#ffffff\"}\n            font-color={themeMode === \"dark\" ? \"#ffffff\" : \"#000000\"}\n        />\n    );\n}","import { useEffect, useState } from \"react\";\nimport { Card } from '@mui/material';\n\nimport Page from 'src/components/Page';\nimport VirtualizedSingleAutoComplete from \"src/components/selectors/VirtualizedDataSingleValue\";\nimport CoinConverter from \"./ConverterWidget\";\n\nexport default function CoinConverterPage() {\n\n    const [ coins, setCoins ] = useState<string[]>([]);\n    const [ selectedCoin, setSelectedCoin ] = useState(\"a-hunters-dream\");\n\n    useEffect(() => {\n\n        const getCoins = async () => {\n\n            const coinList = await getCoinList();\n            const options = coinList.map((coin: any) => coin.id);\n            setCoins(options);\n        }\n\n        getCoins();\n\n    }, []);\n\n    const getCoinList = async (\n\n    ) => {\n        const response = await fetch(\n            \"https://api.coingecko.com/api/v3/coins/list\"\n        );\n        const data = await response.json();\n        return data;\n    }\n\n    return (\n        <Page title=\"Coin Converter\" sx={{ height: 1 }}>\n            <Card sx={{ p: 3 }}>\n                <VirtualizedSingleAutoComplete\n                    label=\"Select a coin\"\n                    options={coins}\n                    value={selectedCoin}\n                    onChange={(newValue) => {\n                        setSelectedCoin(newValue);\n                    }}\n                />\n                <br />\n                < CoinConverter\n                    coinId={selectedCoin}\n                    toCurrency={\"usd\"}\n                />\n            </Card>\n        </Page>\n    );\n}"],"names":["Page","forwardRef","ref","children","title","meta","other","paddingLeft","paddingRight","renderRow","props","data","index","style","dataSet","inlineStyle","top","hasOwnProperty","ListSubheader","component","group","key","Typography","noWrap","OuterElementContext","createContext","OuterElementType","outerProps","useContext","ListboxComponent","itemData","forEach","item","push","theme","useTheme","smUp","useMediaQuery","breakpoints","up","noSsr","itemCount","length","itemSize","getChildSize","child","gridRef","useRef","useEffect","current","resetAfterIndex","useResetCache","Provider","value","height","map","reduce","a","b","width","outerElementType","innerElementType","overscanCount","StyledPopper","styled","Popper","autocompleteClasses","boxSizing","padding","margin","VirtualizedSingleAutoComplete","disabled","error","label","variant","helperText","options","size","showSearchMore","fullWidth","onChange","onSearchMore","getOptionLabel","useState","open","setOpen","textRef","autoCompleteRef","Autocomplete","id","multiple","disablePortal","autoHighlight","disableListWrap","clearOnBlur","clearOnEscape","freeSolo","openOnFocus","noOptionsText","Fragment","onClick","cursor","PopperComponent","renderOption","option","renderGroup","params","onOpen","onClose","event","opt","renderInput","TextField","inputProps","autoComplete","InputLabelProps","shrink","inputRef","CoinConverter","coinId","toCurrency","useSettings","themeMode","language","currency","locale","CoinConverterPage","coins","setCoins","selectedCoin","setSelectedCoin","getCoins","getCoinList","coinList","coin","fetch","response","json","sx","Card","p","newValue"],"sourceRoot":""}